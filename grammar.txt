Programa->programa id
Programa->BloqueDeclaraciones inicio BloqueSentencias fin BloqueSubrutinas
BloqueDeclaraciones->Declaraciones ListaDeclaraciones
BloqueDeclaraciones->ε
ListaDeclaraciones->Declaraciones ListaDeclaraciones
ListaDeclaraciones->ε
Declaraciones->const SentenciaAsignFunc ListaConst
ListaConst->SentenciaAsignFunc ListaConst
ListaConst->ε
Declaraciones->tipos id MasTiposVar : TipoDato ListaVarTipo
ListaVarTipo->id : TipoDato ListaVarTipo
ListaVarTipo->ε
MasTiposVar->, id MasTiposVar
MasTiposVar->ε
Declaraciones->var id MasTiposVar : TipoDato ListaVarTipo
TipoDato->TipoBasico
TipoDato->TipoComplejo
TipoBasico->numero
TipoBasico->cadena
TipoBasico->logico
TipoBasico->id
TipoComplejo->vector [ VectorTamanio ] TipoBasico
TipoComplejo->matriz [ MatrizTamanio ] TipoBasico
TipoComplejo->registro { ListaVarTipo }
VectorTamanio->Expresion
MatrizTamanio->Expresion MatrizTamanioLista
MatrizTamanioLista->, MatrizTamanio
MatrizTamanioLista->ε
ListaArgumentos->, Argumento ListaArgumentos
ListaArgumentos->ε
ListaSentencias->BloqueSentencias
ListaSentencias->ε
FinSentencia->ε
FinSentencia->;
BloqueSentencias->Sentencia FinSentencia ListaSentencias
Sentencia->SentenciaAsignFunc
Sentencia->SentenciaMientras
Sentencia->SentenciaRepetirHasta
Sentencia->SentenciaEval
Sentencia->SentenciaDesde
Sentencia->SentenciaRetorna
SentenciaMientras->mientras ( Expresion ) { BloqueSentencias }
SentenciaRepetirHasta->repetir BloqueSentencias hasta ( Expresion )
SentenciaEval->eval { EvalCuerpo ListaCasosEval SinoEval }
ListaCasosEval->EvalCuerpo ListaCasosEval
ListaCasosEval->ε
EvalCuerpo->caso ( Expresion ) BloqueSentencias
SinoEval->sino BloqueSentencias
SinoEval->ε
SentenciaDesde->desde SentenciaAsignFunc hasta Expresion { BloqueSentencias }
SentenciaRetorna->retorna ( Expresion )
SentenciaAsignFunc->id SentenciaId
SentenciaId->= Expresion
SentenciaId->( Argumento ListaArgumentos )
Argumento->Expresion
Argumento->ε
Expresion->ExpresionTerminal ExpresionOperador
Expresion->( ExpresionTerminal ) ExpresionOperador
ExpresionOperador->Operador ExpresionOperadorAux
ExpresionOperadorAux->ExpresionTerminal ExpresionOperador
ExpresionOperadorAux->( ExpresionTerminal ) ExpresionOperador
ExpresionOperador->ε
ExpresionTerminal->Signo NumIdTerminal
NumIdTerminal->num
NumIdTerminal->Id
Signo->ε
Signo->+
Signo->-
ExpresionTerminal->cadena_
ExpresionTerminal->not
ExpresionTerminal->TRUE
ExpresionTerminal->FALSE
ExpresionTerminal->SI
ExpresionTerminal->NO
Operador->+
Operador->-
Operador->*
Operador->/
Operador->%
Operador->^
Operador->and
Operador->or
Operador-><
Operador->>
Operador-><=
Operador->>=
Operador->==
Operador-><>
Id->id IdCompuesto
IdCompuesto->IdValores
IdCompuesto->. Id
IdCompuesto->ε
IdCompuesto->( Argumento ListaArgumentos )
IdValores->[ Expresion ListaValoresMatriz ]
ListaValoresMatriz->, Expresion ListaValoresMatriz
ListaValoresMatriz->ε